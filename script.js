
let due침os = [];
let mascotas = [];
let idDue침oCounter = 1;
let idMascotaCounter = 1;


const estadosSalud = ['sano', 'enfermo', 'en tratamiento'];
const especies = ['perro', 'gato', 'ave', 'reptil', 'otro'];

let opciones = {
    "1": AgregarDue침o,
    "2": AgregarMascota,
    "3": MascotaRegistrada,
    "4": MostrarMascotasNombre,
}
function iniciarVeterinaria(){
    mostrarMenu();
}
function mostrarMenu(){
    const menu = prompt(`
    游냤游냠 VETERINARIA AS칈NCRONA 游붚游냀
    1. Agregar due침o
    2. Agregar mascota
    3. Listar mascotas
    4. Buscar mascota por nombre
    5. Actualizar estado de salud de una mascota
    6. Eliminar una mascota por nombre
    7. Ver mascotras por due침o
    8. Salir
    Escribe una opci칩n:
    `)
    if (menu in opciones){
        opciones[menu]();
    }
}
function AgregarDue침o(){
    alert("Cargando... (Tiempo estimado: 1.5 segundos)");
    setTimeout(()=>{
        let nombre = prompt("Ingrese el nombre del due침o:").toLocaleLowerCase()
        if (!nombre){
            alert("Nombre no puede estar vac칤o");
            return mostrarMenu();
        }
        let cedula = prompt("Ingrese la c칠dula del due침o:")
        if (!cedula){
            alert("Cedula no puede estar vacia");
            return mostrarMenu();
        }
        const existencia = due침os.find(b => b.cedula == cedula)
        if (existencia){
            alert(`Ya existe el due침o con esta cedual: ${cedula}`)
            mostrarMenu()
        }
        let telefono = prompt("Ingrese el tel칠fono del due침o:")
        if (!telefono){
            alert("Tel칠fono no puede estar vac칤o");
            return mostrarMenu();
        }
        let due침o = {
            id: idDue침oCounter++,
            nombre: nombre,
            cedula: cedula,
            telefono: telefono
        }
        due침os.push(due침o);
        alert("Validando datos del due침o... (Tiempo estimado: 1.5 segundos)")
        setTimeout(()=>{
            alert(`Due침o ${nombre} agregado con 칠xito!`);
            mostrarMenu()
        },1500)
    }, 1500)
}

function AgregarMascota(){
    if (due침os.length === 0){
        alert("No hay due침os registrados, ingrese uno primero")
        return mostrarMenu()
    }
    alert("Validando datos del due침o... (Tiempo estimado: 1.5 segundos)");
    setTimeout(()=>{
        let nombre = prompt("Ingrese el nombre de la mascota:").toLocaleLowerCase()
        if (!nombre){
            alert("Nombre no puede estar vac칤o");
            return mostrarMenu();
        };
        let especie = prompt(`Ingrese la especie (${especies.join(', ')}):`).toLocaleLowerCase();
        if (!especie || !especies.includes(especie)) {
            alert("La especie no puede estar vacia")
            return mostrarMenu()
        };
        let edad = prompt("Ingrese la edad en a침os:")
        if(!edad){
            alert("La edad no puede estar vacia")
            return mostrarMenu()
        };
        let peso = prompt("Ingrese el peso en kilogramos:")
        if (!peso){
            alert("El peso no puede estar vacio")
            return mostrarMenu()
        };
        let salud = prompt(`Ingrese la salud (${estadosSalud.join(", ")}):`).toLocaleLowerCase()
        if (!salud){
            alert("La salud no puede estar vacia")
            return mostrarMenu()
        };
        let cedulaDue침o = prompt("Escriba la cedula del due침o:")
        const due침o = due침os.find( d => d.cedula === cedulaDue침o)
        if (!due침o){
            alert(`No se encontro el due침o con esa cedula ${cedulaDue침o}`)
            return mostrarMenu()
        };
        const nuevaMascota = {
            id: idMascotaCounter++,
            nombre,
            especie,
            edad,
            peso,
            EstadoSalud: salud,
            idDue침o: due침o.id
        }
        mascotas.push(nuevaMascota)
        alert("Agregando a la mascota (Puede durar 2 segundos)")
        setTimeout(()=>{
            alert(`Mascota ${nombre}, registrada con exito con el ID: ${nuevaMascota.id}`)
            mostrarMenu()
        },2000)
    },1500)
}
function MascotaRegistrada(){
    alert("Cargando... (Puede tardar 1.5 segundos)")
    if (mascotas.length > 0){
        setTimeout(() => {
            alert("Mascotas registradas:\n" + mascotas.map(m => `${m.nombre} (${m.especie}) edad: ${m.edad} peso: ${m.peso} Salud: ${m.EstadoSalud} ID due침o: ${m.idDue침o}`).join('\n'));
            mostrarMenu()
        }, 1500);
    }else{
        setTimeout(()=>{
            alert("No se ha registrado ninguna mascota")
            mostrarMenu()
        },1500)
    }
}
function BuscarMascota(){
    return new Promise((resolve, reject) => {
        setTimeout(()=>{
            const coincidencias = mascotas.filter(m => m.nombre.toLowerCase().startsWith(nombre));
            if(coincidencias.length > 0){
                resolve(coincidencias)
            }else{
                reject("No se encontraron mascotas con este nombre")
            }
        },1500)
    })
}
function MostrarMascotasNombre(){
    let nombre = prompt("Escribe el nombre de la mascota:").toLowerCase()
    alert("Cargando mascotas... (Puede tardar 1.5 segundos)")

    BuscarMascota(nombre)
    .then((coincidencias)=>{
        alert("Mascotas encontradas:\n", coincidencias.map(c => `${c.nombre} (${c.especie})`).join("\n"))
        mostrarMenu()
    })
    .catch((error)=>{
        alert(error);
        mostrarMenu();
    })
}

window.onload = iniciarVeterinaria;